/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.example.optaplanner.frequencyPlanner.solve;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import domain.Frequency;
import domain.FrequencyPlan;
import domain.Transmitter;

global HardSoftScoreHolder scoreHolder;


// ############################################################################
// Hard constraints
// ############################################################################

rule "No neighbours with the same frequency"
    when
        $frequency:Frequency($frequencyValue : frequencyValue)
           
            
    then   scoreHolder.addHardConstraintMatch(kcontext, -1 );
     System.out.println($frequencyValue);
end

